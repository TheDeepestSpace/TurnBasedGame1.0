# FINISH GAME B-TREE TASKS / CONDITIONS #

import finishGame:"com.turnbasedgame.game.Actors.AI.Tasks.BehaviorTrees.FinishGameTree.FinishGameTask"

import enemyExists?:"com.turnbasedgame.game.Actors.AI.Tasks.BehaviorTrees.FinishGameTree.EnemyExistsCondition"
import allyExists?:"com.turnbasedgame.game.Actors.AI.Tasks.BehaviorTrees.FinishGameTree.AllyExistsCondition"

subtree name:"finishGame"
    selector
        sequence
            invert
                enemyExists?
            finishGame reason:"no enemies found"
        sequence
            invert
                allyExists?
            finishGame reason:"no allies found"

# SUBTREE #1 TASKS / CONDITIONS #
# name: strategy1

import strategy1findClosestEnemy:"com.turnbasedgame.game.Actors.AI.Tasks.BehaviorTrees.Strategy1Tree.FindClosestEnemyTask"
import strategy1attackClosestEnemy:"com.turnbasedgame.game.Actors.AI.Tasks.BehaviorTrees.Strategy1Tree.AttackClosestEnemyTask"

subtree name:"strategy1"
    sequence
        strategy1findClosestEnemy
        strategy1attackClosestEnemy

# ROOT TASKS / CONDITIONS#

import finishTurn:"com.turnbasedgame.game.Actors.AI.Tasks.FinishTurnTask"

root
    sequence
        selector
            $finishGame
            sequence
                alwaysSucceed
                    $strategy1
                finishTurn